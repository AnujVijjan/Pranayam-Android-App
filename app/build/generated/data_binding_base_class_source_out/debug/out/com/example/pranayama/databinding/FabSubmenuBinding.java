// Generated by view binder compiler. Do not edit!
package com.example.pranayama.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.pranayama.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FabSubmenuBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView cvtEdit;

  @NonNull
  public final TextView cvtPhoto;

  @NonNull
  public final TextView cvtSave;

  @NonNull
  public final FloatingActionButton fabEdit;

  @NonNull
  public final FrameLayout fabFrame;

  @NonNull
  public final FloatingActionButton fabPhoto;

  @NonNull
  public final FloatingActionButton fabSave;

  @NonNull
  public final LinearLayout layoutFabEdit;

  @NonNull
  public final LinearLayout layoutFabPhoto;

  @NonNull
  public final LinearLayout layoutFabSave;

  private FabSubmenuBinding(@NonNull FrameLayout rootView, @NonNull TextView cvtEdit,
      @NonNull TextView cvtPhoto, @NonNull TextView cvtSave, @NonNull FloatingActionButton fabEdit,
      @NonNull FrameLayout fabFrame, @NonNull FloatingActionButton fabPhoto,
      @NonNull FloatingActionButton fabSave, @NonNull LinearLayout layoutFabEdit,
      @NonNull LinearLayout layoutFabPhoto, @NonNull LinearLayout layoutFabSave) {
    this.rootView = rootView;
    this.cvtEdit = cvtEdit;
    this.cvtPhoto = cvtPhoto;
    this.cvtSave = cvtSave;
    this.fabEdit = fabEdit;
    this.fabFrame = fabFrame;
    this.fabPhoto = fabPhoto;
    this.fabSave = fabSave;
    this.layoutFabEdit = layoutFabEdit;
    this.layoutFabPhoto = layoutFabPhoto;
    this.layoutFabSave = layoutFabSave;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FabSubmenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FabSubmenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fab_submenu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FabSubmenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cvtEdit;
      TextView cvtEdit = rootView.findViewById(id);
      if (cvtEdit == null) {
        break missingId;
      }

      id = R.id.cvtPhoto;
      TextView cvtPhoto = rootView.findViewById(id);
      if (cvtPhoto == null) {
        break missingId;
      }

      id = R.id.cvtSave;
      TextView cvtSave = rootView.findViewById(id);
      if (cvtSave == null) {
        break missingId;
      }

      id = R.id.fabEdit;
      FloatingActionButton fabEdit = rootView.findViewById(id);
      if (fabEdit == null) {
        break missingId;
      }

      FrameLayout fabFrame = (FrameLayout) rootView;

      id = R.id.fabPhoto;
      FloatingActionButton fabPhoto = rootView.findViewById(id);
      if (fabPhoto == null) {
        break missingId;
      }

      id = R.id.fabSave;
      FloatingActionButton fabSave = rootView.findViewById(id);
      if (fabSave == null) {
        break missingId;
      }

      id = R.id.layoutFabEdit;
      LinearLayout layoutFabEdit = rootView.findViewById(id);
      if (layoutFabEdit == null) {
        break missingId;
      }

      id = R.id.layoutFabPhoto;
      LinearLayout layoutFabPhoto = rootView.findViewById(id);
      if (layoutFabPhoto == null) {
        break missingId;
      }

      id = R.id.layoutFabSave;
      LinearLayout layoutFabSave = rootView.findViewById(id);
      if (layoutFabSave == null) {
        break missingId;
      }

      return new FabSubmenuBinding((FrameLayout) rootView, cvtEdit, cvtPhoto, cvtSave, fabEdit,
          fabFrame, fabPhoto, fabSave, layoutFabEdit, layoutFabPhoto, layoutFabSave);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

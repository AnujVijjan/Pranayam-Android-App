// Generated by view binder compiler. Do not edit!
package com.example.pranayama.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.pranayama.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityKapalbhatiBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FrameLayout fabFrame;

  @NonNull
  public final RelativeLayout fabReadMore;

  @NonNull
  public final TextView hr;

  @NonNull
  public final LinearLayout layoutFabBenefits;

  @NonNull
  public final LinearLayout layoutFabHelp;

  @NonNull
  public final LinearLayout layoutFabInfo;

  @NonNull
  public final TextView min;

  @NonNull
  public final Button playButton;

  @NonNull
  public final FloatingActionButton readMore;

  @NonNull
  public final Button reportButton;

  @NonNull
  public final TextView sec;

  @NonNull
  public final NumberPicker time;

  private ActivityKapalbhatiBinding(@NonNull LinearLayout rootView, @NonNull FrameLayout fabFrame,
      @NonNull RelativeLayout fabReadMore, @NonNull TextView hr,
      @NonNull LinearLayout layoutFabBenefits, @NonNull LinearLayout layoutFabHelp,
      @NonNull LinearLayout layoutFabInfo, @NonNull TextView min, @NonNull Button playButton,
      @NonNull FloatingActionButton readMore, @NonNull Button reportButton, @NonNull TextView sec,
      @NonNull NumberPicker time) {
    this.rootView = rootView;
    this.fabFrame = fabFrame;
    this.fabReadMore = fabReadMore;
    this.hr = hr;
    this.layoutFabBenefits = layoutFabBenefits;
    this.layoutFabHelp = layoutFabHelp;
    this.layoutFabInfo = layoutFabInfo;
    this.min = min;
    this.playButton = playButton;
    this.readMore = readMore;
    this.reportButton = reportButton;
    this.sec = sec;
    this.time = time;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityKapalbhatiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityKapalbhatiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_kapalbhati, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityKapalbhatiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fabFrame;
      FrameLayout fabFrame = rootView.findViewById(id);
      if (fabFrame == null) {
        break missingId;
      }

      id = R.id.fabReadMore;
      RelativeLayout fabReadMore = rootView.findViewById(id);
      if (fabReadMore == null) {
        break missingId;
      }

      id = R.id.hr;
      TextView hr = rootView.findViewById(id);
      if (hr == null) {
        break missingId;
      }

      id = R.id.layoutFabBenefits;
      LinearLayout layoutFabBenefits = rootView.findViewById(id);
      if (layoutFabBenefits == null) {
        break missingId;
      }

      id = R.id.layoutFabHelp;
      LinearLayout layoutFabHelp = rootView.findViewById(id);
      if (layoutFabHelp == null) {
        break missingId;
      }

      id = R.id.layoutFabInfo;
      LinearLayout layoutFabInfo = rootView.findViewById(id);
      if (layoutFabInfo == null) {
        break missingId;
      }

      id = R.id.min;
      TextView min = rootView.findViewById(id);
      if (min == null) {
        break missingId;
      }

      id = R.id.play_button;
      Button playButton = rootView.findViewById(id);
      if (playButton == null) {
        break missingId;
      }

      id = R.id.read_more;
      FloatingActionButton readMore = rootView.findViewById(id);
      if (readMore == null) {
        break missingId;
      }

      id = R.id.report_button;
      Button reportButton = rootView.findViewById(id);
      if (reportButton == null) {
        break missingId;
      }

      id = R.id.sec;
      TextView sec = rootView.findViewById(id);
      if (sec == null) {
        break missingId;
      }

      id = R.id.time;
      NumberPicker time = rootView.findViewById(id);
      if (time == null) {
        break missingId;
      }

      return new ActivityKapalbhatiBinding((LinearLayout) rootView, fabFrame, fabReadMore, hr,
          layoutFabBenefits, layoutFabHelp, layoutFabInfo, min, playButton, readMore, reportButton,
          sec, time);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
